@use "sass:math";

$column-gap: 0.75rem !default;

.column {
    display: block;
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    padding: $column-gap;

    .columns.is-mobile > &.is-narrow {
        flex: none;
    }

    .columns.is-mobile > &.is-full {
        flex: none;
        width: 100%;
    }

    @for $i from 0 through 12 {
        .columns.is-mobile > &.is-#{$i} {
            flex: none;
            width: percentage(math.div($i, 12));
        }

        .columns.is-mobile > &.is-offset-#{$i} {
            margin-left: percentage(math.div($i, 12));
        }
    }

    @include mobile {
        &.is-narrow-mobile {
            flex: none;
        }

        &.is-full-mobile {
            flex: none;
            width: 100%;
        }

        @for $i from 0 through 12 {
            &.is-#{$i}-mobile {
                flex: none;
                width: percentage(math.div($i, 12));
            }

            &.is-offset-#{$i}-mobile {
                margin-left: percentage(math.div($i, 12));
            }
        }
    }


    @include tablet {
        &.is-narrow,
        &.is-narrow-tablet {
            flex: none;
        }

        &.is-full,
        &.is-full-tablet {
            flex: none;
            width: 100%;
        }

        @for $i from 0 through 12 {
            &.is-#{$i},
            &.is-#{$i}-tablet {
                flex: none;
                width: percentage(math.div($i, 12));
            }

            &.is-offset-#{$i},
            &.is-offset-#{$i}-tablet {
                margin-left: percentage(math.div($i, 12));
            }
        }
    }


    @include touch {
        &.is-narrow-touch {
            flex: none;
        }

        &.is-full-touch {
            flex: none;
            width: 100%;
        }

        @for $i from 0 through 12 {
            &.is-#{$i}-touch {
                flex: none;
                width: percentage(math.div($i, 12));
            }

            &.is-offset-#{$i}-touch {
                margin-left: percentage(math.div($i, 12));
            }
        }
    }


    @include desktop {
        &.is-narrow-desktop {
            flex: none;
        }

        &.is-full-desktop {
            flex: none;
            width: 100%;
        }

        @for $i from 0 through 12 {
            &.is-#{$i}-desktop {
                flex: none;
                width: percentage(math.div($i, 12));
            }

            &.is-offset-#{$i}-desktop {
                margin-left: percentage(math.div($i, 12));
            }
        }
    }


    @include widescreen {
        &.is-narrow-widescreen {
            flex: none;
        }

        &.is-full-widescreen {
            flex: none;
            width: 100%;
        }

        @for $i from 0 through 12 {
            &.is-#{$i}-widescreen {
                flex: none;
                width: percentage(math.div($i, 12));
            }

            &.is-offset-#{$i}-widescreen {
                margin-left: percentage(math.div($i, 12));
            }
        }
    }


    @include fullhd {
        &.is-narrow-fullhd {
            flex: none;
        }

        &.is-full-fullhd {
            flex: none;
            width: 100%;
        }

        @for $i from 0 through 12 {
            &.is-#{$i}-fullhd {
                flex: none;
                width: percentage(math.div($i, 12));
            }

            &.is-offset-#{$i}-fullhd {
                margin-left: percentage(math.div($i, 12));
            }
        }
    }
}

.columns {
    margin-left: -$column-gap;
    margin-right: -$column-gap;
    margin-top: -$column-gap;

    &:last-child {
        margin-bottom: -$column-gap;
    }

    &:not(:last-child) {
        margin-bottom: calc(1.5rem - #{$column-gap});
    }

    // Modifiers
    &.is-centered {
        justify-content: center;
    }

    &.is-gapless {
        margin-left: 0;
        margin-right: 0;
        margin-top: 0;

        & > .column {
            margin: 0;
            padding: 0 !important;
        }

        &:not(:last-child) {
            margin-bottom: 1.5rem;
        }

        &:last-child {
            margin-bottom: 0;
        }
    }

    &.is-mobile {
        display: flex;
    }

    &.is-multiline {
        flex-wrap: wrap;
    }

    &.is-vcentered {
        align-items: center;
    }

    // Responsiveness
    @include tablet {
        &:not(.is-desktop) {
            display: flex;
        }
    }


    @include desktop {
        // Modifiers
        &.is-desktop {
            display: flex;
        }
    }

    &.is-variable {
        --columnGap: 0.75rem;
        margin-left: calc(-1 * var(--columnGap));
        margin-right: calc(-1 * var(--columnGap));

        .column {
            padding-left: var(--columnGap);
            padding-right: var(--columnGap);
        }

        @for $i from 0 through 8 {
            &.is-#{$i} {
                --columnGap: #{$i * 0.25rem};
            }

            @include mobile {
                &.is-#{$i}-mobile {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include tablet {
                &.is-#{$i}-tablet {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include tablet-only {
                &.is-#{$i}-tablet-only {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include touch {
                &.is-#{$i}-touch {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include desktop {
                &.is-#{$i}-desktop {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include desktop-only {
                &.is-#{$i}-desktop-only {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include widescreen {
                &.is-#{$i}-widescreen {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include widescreen-only {
                &.is-#{$i}-widescreen-only {
                    --columnGap: #{$i * 0.25rem};
                }
            }


            @include fullhd {
                &.is-#{$i}-fullhd {
                    --columnGap: #{$i * 0.25rem};
                }
            }
        }
    }
}